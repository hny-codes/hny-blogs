---
import {
  documentToHtmlString,
  Options,
} from '@contentful/rich-text-html-renderer';
import { contentfulClient } from '../../lib/contentful';
import BaseLayout from '../../layouts/BaseLayout.astro';
import {
  BLOCKS,
  INLINES,
  Text,
  Paragraph,
  ListItem,
  ListItemBlock,
  Hyperlink,
} from '@contentful/rich-text-types';
import type { TypeBlogPostSkeleton } from '../../lib/content-types';

export async function getStaticPaths() {
  // REFERENCE: https://www.contentful.com/blog/rendering-linked-assets-entries-in-contentful/
  const renderOptions: Partial<Options> = {
    renderNode: {
      [BLOCKS.EMBEDDED_ASSET]: (node) =>
        `<img 
        class='my-4'
        src=https:${node.data.target.fields.file.url} 
        height=${node.data.target.fields.file.details.image.height} 
        width=${node.data.target.fields.file.details.image.width} 
        alt=${node.data.target.fields.description} />`,
      [BLOCKS.HEADING_1]: (node) =>
        `<h1 class='font-bold text-2xl mt-6'>
          ${(node.content[0] as Text).value}
        </h1>`,
      [BLOCKS.HEADING_2]: (node) =>
        `<h2 class='font-bold text-xl mt-6'>
            ${(node.content[0] as Text).value}
        </h2>`,
      [INLINES.HYPERLINK]: (node) =>
        `<a 
          href=${(node.content[0] as Text).value}
          class='underline font-extrabold hover:text-[hsl(var(--a))] active:hover:text-[hsl(var(--af))] transition'
        >
          ${(node.content[0] as Text).value}</a>`,
      [BLOCKS.QUOTE]: (node) => {
        const data = node.content[0] as Paragraph;
        const text = data.content[0] as Text;
        return `<blockquote class='pl-2 my-4 border-l-4 border-[hsl(var(--p))] italic'>
          ${text.value}
        </blockquote>`;
      },
      [BLOCKS.OL_LIST]: (node) => {
        return `<ol class='my-6'>${(node.content as ListItem[])
          .map((item) => {
            // Type declarations
            const listItemBlock = item.content[0] as ListItemBlock;
            const liBlockEnum = listItemBlock.content[1];
            const hyperlink = liBlockEnum as Hyperlink;
            const data = hyperlink.data;
            const uri = hyperlink.data.uri;
            const value = (hyperlink.content[0] as Text).value;

            return Object.keys(data).length !== 0
              ? `<li class='list-decimal ml-4 my-4 text-sm'>
                <a href=${uri} class='underline font-extrabold hover:text-[hsl(var(--a))] active:hover:text-[hsl(var(--af))] transition'>
                  ${value}
                </a>
              </li>`
              : `<li class='list-decimal ml-4 my-2 text-sm'>
                ${value}
              </li>`;
          })
          .join('')}</ol>`;
      },
      [BLOCKS.UL_LIST]: (node) => {
        return `<ul class='my-6'>${(node.content as ListItem[])
          .map((item) => {
            const listItemBlock = item.content[0] as ListItemBlock;
            const text = listItemBlock.content[0] as Text;
            const value = text.value;
            return `<li class='list-disc ml-4 my-4 text-sm'>${value}</li>`;
          })
          .join('')}</ul>`;
      },
    },
  };

  const entries = await contentfulClient.getEntries<TypeBlogPostSkeleton>({
    content_type: 'blogPost',
  });

  const pages = entries.items.map((item) => ({
    params: { slug: item.fields.slug },
    props: {
      title: item.fields.title,
      content: documentToHtmlString(item.fields.content, renderOptions),
      date: new Date(item.fields.date).toLocaleDateString(),
    },
  }));

  return pages;
}

const { content, title, date } = Astro.props;
---

<BaseLayout pageTitle={title}>
  <div class='my-20 max-w-xl mx-auto px-6 sm:px-2'>
    <div class='mb-10 relative'>
      <h1 class='font-bold text-3xl sm:text-4xl w-fit pb-2'>
        {title}
      </h1>
      <time class='font-semibold'>{date}</time>
      <div
        class='w-0 p-1 opacity-0 bg-primary absolute left-0 -bottom-4 animate-hoverBarAnim'
      >
      </div>
    </div>
    <article class='' set:html={content} />
  </div>
</BaseLayout>
