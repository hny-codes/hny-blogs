---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { contentfulClient } from '../../lib/contentful';
import type { BlogPost } from '../../lib/contentful';
import PostItem from '../../components/PostItem.astro';
import type { TypeBlogPostSkeleton } from '../../lib/content-types';

// Create pagination paths for posts
export async function getStaticPaths({ paginate }: any) {
  const entries = await contentfulClient.getEntries<TypeBlogPostSkeleton>({
    content_type: 'blogPost',
  });

  const posts = entries.items.map((item) => {
    const { title, date, description, slug } = item.fields;
    return {
      title,
      slug,
      description,
      date: new Date(date).toLocaleDateString(),
    };
  });

  return paginate(posts, { pageSize: 5 });
}

// Get total entries from CMS
const entries = await contentfulClient.getEntries<TypeBlogPostSkeleton>({
  content_type: 'blogPost',
});
const count = entries.total;

const pageTitle = 'hny-blogs | Posts';

//Paginated data passed to page prop
const { page } = Astro.props;
---

<BaseLayout pageTitle={pageTitle}>
  <main class='mt-20'>
    <div class='px-6 sm:px-2 pb-6 max-w-xl mx-auto'>
      <div class='flex justify-between items-center mb-2'>
        <h1 class='font-bold text-3xl relative'>
          All Posts <div
            class='w-0 p-1 opacity-0 bg-primary absolute left-0 top-8 sm:top-9 animate-hoverBarAnim'
          >
          </div>
        </h1>
      </div>
      <p class='italic'>
        A list of all of my <span
          class='font-black text-4xl text-[hsl(var(--p))] px-1'
          id='post-count'>{count}</span
        > tangents
      </p>
    </div>
    <div class='bg-base-200 mb-2'>
      <ul
        class='px-4 sm:px-1 divide-y divide-[hsl(var(--pc))] max-w-xl mx-auto py-4'
      >
        {
          page.data.map(({ title, slug, description, date }: BlogPost) => (
            <PostItem
              title={title}
              date={date}
              desc={description}
              slug={`/posts/${slug}`}
            />
          ))
        }
      </ul>
    </div>
    <div class='join flex justify-center max-w-xl mx-auto mb-12'>
      {
        page.url.prev ? (
          <a href={page.url.prev}>
            <button class='join-item btn bg-primary hover:bg-primary-focus text-[hsl(var(--n))]'>«</button>
          </a>
        ) : (
          <a href={page.url.prev}>
            <button class='join-item btn btn-disabled bg-primary hover:bg-primary-focus text-[hsl(var(--n))]'>«</button>
          </a>
        )
      }
      <div class='btn join-item pointer-events-none bg-primary text-[hsl(var(--n))]'>Page {page.currentPage}</div>
      {
        page.url.next ? (
          <a href={page.url.next}>
            <button class='join-item btn bg-primary hover:bg-primary-focus text-[hsl(var(--n))]'>»</button>
          </a>
        ) : (
          <a href={page.url.next}>
            <button class='join-item btn btn-disabled bg-primary hover:bg-primary-focus text-[hsl(var(--n))]'>»</button>
          </a>
        )
      }
    </div>
  </main>
</BaseLayout>

<script>
  let counter = document.getElementById('post-count');
  const postCount = Number(counter?.innerText);

  function incrementCount(
    id: string,
    currentNum: number,
    target: number,
    duration: number
  ) {
    let counter = document.getElementById(id);
    let stepTime = Math.abs(Math.floor(duration / target));
    if (currentNum < target && counter) {
      currentNum++;
      counter.innerText = currentNum.toString();
      setTimeout(
        () => incrementCount(id, currentNum, target, duration),
        stepTime
      );
    }
  }

  document.addEventListener('swup:contentReplaced', () => {
    incrementCount('post-count', 0, postCount, 1000);
  });
</script>
